<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dynamic">
	<sql id="empSql">
		select employee_id, last_name, email, hire_date, job_id, salary from employees
	</sql>

  <!-- 
   1. employees테이블에서 조건에 따라 검색하기
    
      last_name이 들어오면 last_name에 해당하는 레코드 검색 or
      job_id이 들어오면 job_id에 해당하는 레코드 검색 
      둘다 들어오면 last_name과 job_id을 조건으로 사용.
      
      1) select employee_id, last_name, email, hire_date, job_id, salary from employees;

      2) select * from employees where last_name="";

      3) select * from employees where last_name="" and job_id="";

      4) select * from employees where  job_id="";
      
   -->
   <!-- <select id="ifSelect" parameterType="employees" resultType="employees">
   		<include refid="empSql"/>
   		<where>
   			<if test="lastName!=null"> lastName (o) last_name (x)
	   			last_name=#{lastName}
	   		</if>
	   		<if test="jobId!=null">
	   			or job_id=#{jobId}
	   		</if>
   		</where>
   </select> -->
   
   <!-- 
   		위의 select를 trim으로 변경해보자
   	  *trim 요소
      prefix="처리후 엘리먼트 내용이 있으면 가장 앞에 붙여준다"  
      prefixOverrides="처리후 엘리먼트 내용중 가장 앞에 해당 문자들이 있다면 자동삭제" 
      
      suffix="처리후 엘리먼트 내용이 있으면 가장 뒤에 붙여준다." 
      suffixOverrides="처리후 엘리먼트 내용중 가장 뒤에 해당 문자들이 있다면 자동삭제"
   -->
   <select id="ifSelect" parameterType="employees" resultType="employees">
   		<include refid="empSql"/>
   		<trim prefix="where" prefixOverrides="AND|OR ">
   			<if test="lastName!=null">
	   			last_name=#{lastName}
	   		</if>
	   		<if test="jobId!=null">
	   			or job_id=#{jobId}
	   		</if>
   		</trim>
   </select>
   
   <!--
   	 레코드 수정
     last_name, job_id, salary 의 항목이 각각 null이 아닐때 
     employee_id에 해당하는 레코드 수정한다.
     update employees  set last_name=?  where employee_id=?;
     update employees  set job_id=?  where employee_id=?;
     update employees  set salary=?  where employee_id=?;
     
     update employees  set last_name=?, job_id=? where employee_id=?;    
    -->
    <!-- <update id="setUpdate" parameterType="employees"> result는 select 전용
    	update employees
    	<set>
    		<if test="lastName!=null">
    			last_name = #{lastName}, set절은 뒤에 아무것도 없으면 ',' 콤마 자동 제거
    		</if>
    		<if test="jobId!=null">
    			job_id = #{jobId},
    		</if>
    		<if test="salary>0"> salary는 int형이기 때문에 표현을 조금 다르게 해야된다
    			salary = #{salary}
    		</if>
    	</set>
    	<where>
    		employee_id = #{employeeId}
    	</where>
    </update> -->
    
    <!-- trim으로 변경하기 -->
	<update id="setUpdate" parameterType="employees"> <!-- result는 select 전용 -->
		update employees
		<trim prefix="set" suffixOverrides=", ">
			<if test="lastName!=null">
				last_name = #{lastName}, <!-- set절은 뒤에 아무것도 없으면 ',' 콤마 자동 제거 -->
			</if>
			<if test="jobId!=null">
				job_id = #{jobId},
			</if>
			<if test="salary>0"> <!-- salary는 int형이기 때문에 표현을 조금 다르게 해야된다 -->
				salary = #{salary}
			</if>
		</trim>
		<where>
			employee_id = #{employeeId}
		</where>
	</update>
	
	<!-- 
      select * from employees
      where employee_id in (7777);
      
       select * from employees
      where employee_id in (7777,222,444,....); 
     -->
     <select id="forSelect" parameterType="list" resultType="employees"><!-- alias list -->
     	<include refid="empSql"/>
     	<where>
     		employee_id in 
     		<foreach collection="list" item="item" open="(" close=")" separator=", ">
     			#{item}
     		</foreach>
     	</where>
     </select>

</mapper>